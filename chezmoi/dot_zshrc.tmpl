# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

export VISUAL=vim
export EDITOR="$VISUAL"

# >>> ANTIGEN >>>
{{ if eq .chezmoi.os "linux" -}}
source $HOME/antigen.zsh
{{ else if eq .chezmoi.os "darwin" -}}
source /opt/homebrew/share/antigen/antigen.zsh
{{- end }}
# Load the oh-my-zsh's library
antigen use oh-my-zsh

# oh-my-zsh bundles
antigen bundle git

# zsh-users bundles
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle zsh-users/zsh-completions

# Load the theme
antigen theme romkatv/powerlevel10k

# Tell antigen that you're done
antigen apply
# <<< ANTIGEN <<<

# >>> P10K THEME >>>
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
# <<< P10K THEME <<<


{{ if eq .chezmoi.os "darwin" -}}
# >>> pyenv >>>
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
# <<< pyenv <<<
{{ end -}}

# >>> PostgreSQL >>>
{{ if eq .chezmoi.os "linux" -}}
{{ else if eq .chezmoi.os "darwin" -}}
export PATH="/opt/homebrew/opt/postgresql@15/bin:$PATH"
# For compilers to find postgresql@15 you may need to set:
export LDFLAGS="-L/opt/homebrew/opt/postgresql@15/lib"
export CPPFLAGS="-I/opt/homebrew/opt/postgresql@15/include"
# For pkg-config to find postgresql@15 you may need to set:
export PKG_CONFIG_PATH="/opt/homebrew/opt/postgresql@15/lib/pkgconfig"
# To restart postgresql@15 after an upgrade:
alias restartpostgres="brew services restart postgresql@15"
{{ end -}}
# <<< PostgreSQL <<<

# >>> OpenSSL >>>
{{ if eq .chezmoi.os "linux" -}}
{{ else if eq .chezmoi.os "darwin" -}}
export OPENSSL_ROOT_DIR="/opt/homebrew/Cellar/openssl@3/3.1.0/"
{{ end -}}
# <<< OpenSSL <<<

# >>> SSH >>>
# See ~/.config/systemd/user/ssh-agent.service
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"
keyfiles=()

for keyfile in ~/.ssh/keys/*(.N); do #gloptions: .=files only (nodir), N=nullglob (no error if no result)
	keyfiles+="$keyfile";
done

for keyfile in ${keyfiles[@]}; do
	ssh-add $keyfile > /dev/null 2>&1;
done
# <<< SSH <<<

