setopt extended_glob;

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# >>> ENV >>>
export VISUAL=vim
export EDITOR="$VISUAL"
export PATH="$PATH:/opt"
export PATH="$PATH:$HOME/.local/bin"
# <<< ENV <<<

# >>> ALACRITTY >>>
TERM=xterm-256color # https://github.com/alacritty/alacritty/issues/3360
# <<< ALACRITTY <<<

# >>> ANTIGEN >>>
{{ if eq .chezmoi.os "linux" -}}
source $HOME/antigen.zsh
{{ else if eq .chezmoi.os "darwin" -}}
source /opt/homebrew/share/antigen/antigen.zsh
{{- end }}
# Load the oh-my-zsh's library
antigen use oh-my-zsh

# oh-my-zsh bundles
antigen bundle git
antigen bundle git-lfs
antigen bundle github
antigen bundle gcloud
antigen bundle node
antigen bundle nodenv
antigen bundle npm
antigen bundle nvm
antigen bundle terraform

# zsh-users bundles
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle zsh-users/zsh-completions

antigen bundle StackExchange/blackbox

# Load the theme
antigen theme romkatv/powerlevel10k

# Tell antigen that you're done
antigen apply
# <<< ANTIGEN <<<

# >>> P10K THEME >>>
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
# <<< P10K THEME <<<


{{ if eq .chezmoi.os "darwin" -}}
# >>> pyenv >>>
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
# <<< pyenv <<<
{{ end -}}

# >>> PostgreSQL >>>
{{ if eq .chezmoi.os "linux" -}}
{{ else if eq .chezmoi.os "darwin" -}}
export PATH="/opt/homebrew/opt/postgresql@15/bin:$PATH"
# For compilers to find postgresql@15 you may need to set:
export LDFLAGS="-L/opt/homebrew/opt/postgresql@15/lib"
export CPPFLAGS="-I/opt/homebrew/opt/postgresql@15/include"
# For pkg-config to find postgresql@15 you may need to set:
export PKG_CONFIG_PATH="/opt/homebrew/opt/postgresql@15/lib/pkgconfig"
# To restart postgresql@15 after an upgrade:
alias restartpostgres="brew services restart postgresql@15"
{{ end -}}
# <<< PostgreSQL <<<

# >>> OpenSSL >>>
{{ if eq .chezmoi.os "linux" -}}
{{ else if eq .chezmoi.os "darwin" -}}
export OPENSSL_ROOT_DIR="/opt/homebrew/Cellar/openssl@3/3.1.0/"
{{ end -}}
# <<< OpenSSL <<<

# >>> SSH >>>
# See ~/.config/systemd/user/ssh-agent.service
eval "$(ssh-agent -s)" > /dev/null # start up the ssh-agent and populate env variables
keyfiles=()

for keyfile in ~/.ssh/keys/(^*.pub)(.N); do #gloptions: .=files only (nodir), N=nullglob (no error if no result)
	keyfiles+="$keyfile";
done

for keyfile in ${keyfiles[@]}; do
	ssh-add $keyfile > /dev/null 2>&1;
done
# <<< SSH <<<

# >>> Node >>>
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
# <<< Node <<<

# >>> ALIASES >>>
source ~/.shaliases
# <<< ALIASES <<<

# Add home/bin to path for user-local programs
PATH="${PATH}:${HOME}/bin"

# >>> DOOM EMACS >>>
PATH="${PATH}:${HOME}/doomemacs/bin"
# <<< DOOM EMACS <<<

